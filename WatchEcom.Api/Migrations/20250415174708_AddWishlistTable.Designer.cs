// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WatchEcom.Api.Data;

#nullable disable

namespace WatchEcom.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250415174708_AddWishlistTable")]
    partial class AddWishlistTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WatchEcom.Api.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WatchEcom.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Security_Question")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WatchEcom.Api.Models.Watch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Watches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Rolex",
                            Description = "Luxury diving watch with stainless steel case",
                            ImageUrl = "/images/watches/1.jpg",
                            Model = "Submariner",
                            Price = 12000m
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Casio",
                            Description = "Durable sports watch with shock resistance",
                            ImageUrl = "/images/watches/2.jpg",
                            Model = "G-Shock",
                            Price = 150m
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Omega",
                            Description = "Moonwatch with chronograph functionality",
                            ImageUrl = "/images/watches/3.jpg",
                            Model = "Speedmaster",
                            Price = 5000m
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Tag Heuer",
                            Description = "Professional diving watch with water resistance",
                            ImageUrl = "/images/watches/4.jpg",
                            Model = "Aquaracer",
                            Price = 2200m
                        },
                        new
                        {
                            Id = 5,
                            Brand = "IWC",
                            Description = "Aviation-inspired watch with sleek design",
                            ImageUrl = "/images/watches/5.jpg",
                            Model = "Pilot Mark XVIII",
                            Price = 4500m
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Cartier",
                            Description = "Classic luxury watch with square case design",
                            ImageUrl = "/images/watches/6.jpg",
                            Model = "Santos",
                            Price = 7500m
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Omega",
                            Description = "Diving watch with ceramic bezel",
                            ImageUrl = "/images/watches/7.jpg",
                            Model = "Seamaster",
                            Price = 4000m
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Rolex",
                            Description = "Adventure-ready watch with high durability",
                            ImageUrl = "/images/watches/8.jpg",
                            Model = "Explorer",
                            Price = 10500m
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Tissot",
                            Description = "Affordable luxury watch with integrated bracelet",
                            ImageUrl = "/images/watches/9.jpg",
                            Model = "Tissot PRX",
                            Price = 700m
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Breitling",
                            Description = "Pilot watch with slide rule bezel",
                            ImageUrl = "/images/watches/10.jpg",
                            Model = "Navitimer",
                            Price = 6000m
                        });
                });

            modelBuilder.Entity("WatchEcom.Api.Models.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("WatchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WatchId");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("WatchEcom.Api.Models.Watch", b =>
                {
                    b.HasOne("WatchEcom.Api.Models.Order", null)
                        .WithMany("Watches")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("WatchEcom.Api.Models.Wishlist", b =>
                {
                    b.HasOne("WatchEcom.Api.Models.Watch", "Watch")
                        .WithMany()
                        .HasForeignKey("WatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Watch");
                });

            modelBuilder.Entity("WatchEcom.Api.Models.Order", b =>
                {
                    b.Navigation("Watches");
                });
#pragma warning restore 612, 618
        }
    }
}
